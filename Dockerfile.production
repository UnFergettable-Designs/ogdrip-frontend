FROM node:22-slim AS builder
# Set the working directory
WORKDIR /app

# Set Node.js memory limits and garbage collection settings
ENV NODE_OPTIONS="--max-old-space-size=4096"
ENV GENERATE_SOURCEMAP=false

# Install pnpm
RUN npm install -g pnpm

# Create workspace structure
RUN mkdir -p frontend shared

# Copy workspace configuration first
COPY pnpm-workspace.yaml ./
COPY package.json pnpm-lock.yaml* ./

# Copy shared package
COPY shared/package.json shared/
COPY shared/tsconfig.json shared/
COPY shared/*.ts shared/

# Copy frontend package
COPY frontend/package.json frontend/
COPY frontend/tsconfig.json frontend/
COPY frontend/svelte.config.js frontend/
COPY frontend/astro.config.mjs frontend/

# Install dependencies at workspace root with production flag and skip husky
ENV HUSKY=0
RUN pnpm install --prod --frozen-lockfile --ignore-scripts

# Copy source files
COPY frontend/src frontend/src/
COPY frontend/public frontend/public/

# Build the frontend with optimized settings
WORKDIR /app/frontend
ENV NODE_ENV=production
ENV ASTRO_TELEMETRY_DISABLED=1

# Run build with increased memory limit
RUN NODE_OPTIONS="--max-old-space-size=4096" pnpm run build

# Production image
FROM node:22-slim
WORKDIR /app

# Install serve globally for static file serving
RUN npm install -g serve

# Copy only the built static files
COPY --from=builder /app/frontend/dist ./dist

# Create necessary directories for volumes
RUN mkdir -p /app/dist/outputs
RUN mkdir -p /app/dist/images

# Set environment variables
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=3000
ENV ASTRO_TELEMETRY_DISABLED=1

# Expose port
EXPOSE 3000

# Serve static files
CMD ["serve", "-s", "dist", "-l", "3000"]
