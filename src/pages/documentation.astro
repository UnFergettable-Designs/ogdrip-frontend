---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

// Define document types
type BackendDoc = CollectionEntry<"backend_docs">;
type FrontendDoc = CollectionEntry<"frontend_docs">;

// Get all documentation entries, sorted by order
const backend_docs = await getCollection("backend_docs");
const frontend_docs = await getCollection("frontend_docs");

// Sort docs by order (or default to 99 if no order specified)
const sortedBackendDocs = backend_docs.sort(
  (a: BackendDoc, b: BackendDoc) => (a.data.order || 99) - (b.data.order || 99)
);
const sortedFrontendDocs = frontend_docs.sort(
  (a: FrontendDoc, b: FrontendDoc) =>
    (a.data.order || 99) - (b.data.order || 99)
);

const title = "Documentation - Open Graph Generator";
---

<Layout title={title}>
  <main>
    <h1>Documentation</h1>
    <p class="subtitle">
      Everything you need to know about the Open Graph Generator
    </p>

    <div class="docs-container">
      <div class="docs-section">
        <h2>Frontend Documentation</h2>
        <p>Learn how to use the Open Graph Generator in your projects</p>
        <ul class="docs-list">
          {
            sortedFrontendDocs.map((doc: FrontendDoc) => (
              <li class="doc-item">
                <a href={`/docs/frontend/${doc.slug}`}>
                  <h3>{doc.data.title}</h3>
                  <p>{doc.data.description}</p>
                  {doc.data.updated && (
                    <span class="updated-date">
                      Updated: {doc.data.updated.toLocaleDateString()}
                    </span>
                  )}
                </a>
              </li>
            ))
          }
        </ul>
      </div>

      <div class="docs-section">
        <h2>Backend Documentation</h2>
        <p>Technical documentation for developers and administrators</p>
        <ul class="docs-list">
          {
            sortedBackendDocs.map((doc: BackendDoc) => (
              <li class="doc-item">
                <a href={`/docs/backend/${doc.slug}`}>
                  <h3>{doc.data.title}</h3>
                  <p>{doc.data.description}</p>
                  {doc.data.updated && (
                    <span class="updated-date">
                      Updated: {doc.data.updated.toLocaleDateString()}
                    </span>
                  )}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </main>
</Layout>

<style>
  main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    color: #333;
  }

  .subtitle {
    color: #666;
    margin-bottom: 2rem;
  }

  .docs-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 3rem;
  }

  @media (min-width: 768px) {
    .docs-container {
      grid-template-columns: 1fr 1fr;
    }
  }

  .docs-section h2 {
    font-size: 1.8rem;
    margin-bottom: 0.5rem;
    color: #1e293b;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #e2e8f0;
  }

  .docs-section > p {
    margin-bottom: 1.5rem;
    color: #64748b;
  }

  .docs-list {
    list-style: none;
    padding: 0;
    display: grid;
    gap: 1rem;
  }

  .doc-item {
    border: 1px solid #e2e8f0;
    border-radius: 0.5rem;
    overflow: hidden;
    transition:
      transform 0.2s,
      box-shadow 0.2s;
  }

  .doc-item:hover {
    transform: translateY(-2px);
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  .doc-item a {
    display: block;
    padding: 1.25rem;
    color: inherit;
    text-decoration: none;
  }

  .doc-item h3 {
    font-size: 1.25rem;
    margin: 0 0 0.5rem 0;
    color: #3730a3;
  }

  .doc-item p {
    margin: 0 0 0.75rem 0;
    color: #4b5563;
    font-size: 0.95rem;
  }

  .updated-date {
    display: block;
    font-size: 0.8rem;
    color: #94a3b8;
  }
</style>
