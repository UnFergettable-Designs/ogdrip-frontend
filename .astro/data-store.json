[["Map",1,2,7,8,183,184],"meta::meta",["Map",3,4,5,6],"astro-version","5.5.2","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"server\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":true,\"port\":3000,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\",\"entrypoint\":\"astro/assets/endpoint/node\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","backend_docs",["Map",9,10,38,39,81,82,129,130],"database-schema",{"id":9,"data":11,"body":16,"filePath":17,"digest":18,"rendered":19,"legacyId":37},{"title":12,"description":13,"order":14,"updated":15},"Database Schema","Overview of the database structure and schema for the Open Graph Generator",2,["Date","2023-05-22T00:00:00.000Z"],"# Database Schema\n\nThe Open Graph Generator uses SQLite to store information about image generations and track usage.\n\n## Generations Table\n\nThe primary table `generations` stores information about each Open Graph image generation:\n\n| Column        | Type      | Description                                            |\n| ------------- | --------- | ------------------------------------------------------ |\n| ID            | TEXT      | Unique identifier for the generation (UUID)            |\n| Title         | TEXT      | The title used in the Open Graph image                 |\n| Description   | TEXT      | The description used in the Open Graph image           |\n| TargetURL     | TEXT      | The URL the Open Graph image points to                 |\n| ImagePath     | TEXT      | Path to the generated image file                       |\n| HTMLPath      | TEXT      | Path to the generated HTML with meta tags              |\n| CreatedAt     | TIMESTAMP | When the generation was created                        |\n| ClientIP      | TEXT      | IP address of the client that requested the generation |\n| UserAgent     | TEXT      | User agent of the client that requested the generation |\n| Parameters    | TEXT      | JSON string of additional parameters used              |\n| Status        | TEXT      | Status of the generation (pending, completed, failed)  |\n| cleanup_after | TIMESTAMP | When the generated files should be cleaned up          |\n\n## Indexes\n\nThe database has the following indexes for performance:\n\n- `idx_generations_id`: Index on the `ID` column for fast lookups\n- `idx_generations_created_at`: Index on the `CreatedAt` column for sorting by time\n- `idx_generations_cleanup_after`: Index on the `cleanup_after` column for the cleanup job\n\n## Automatic Cleanup\n\nGenerated files and database records are automatically cleaned up after a configurable period (default: 24 hours). The cleanup process:\n\n1. Finds all records where `cleanup_after` is before the current time\n2. Deletes the associated image and HTML files\n3. Removes the database record\n\nThis prevents unlimited storage growth and ensures temporary files are properly managed.","src/content/backend_docs/database-schema.md","77eb65c252816790",{"html":20,"metadata":21},"\u003Ch1 id=\"database-schema\">Database Schema\u003C/h1>\n\u003Cp>The Open Graph Generator uses SQLite to store information about image generations and track usage.\u003C/p>\n\u003Ch2 id=\"generations-table\">Generations Table\u003C/h2>\n\u003Cp>The primary table \u003Ccode>generations\u003C/code> stores information about each Open Graph image generation:\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Column\u003C/th>\u003Cth>Type\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>ID\u003C/td>\u003Ctd>TEXT\u003C/td>\u003Ctd>Unique identifier for the generation (UUID)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Title\u003C/td>\u003Ctd>TEXT\u003C/td>\u003Ctd>The title used in the Open Graph image\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Description\u003C/td>\u003Ctd>TEXT\u003C/td>\u003Ctd>The description used in the Open Graph image\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>TargetURL\u003C/td>\u003Ctd>TEXT\u003C/td>\u003Ctd>The URL the Open Graph image points to\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>ImagePath\u003C/td>\u003Ctd>TEXT\u003C/td>\u003Ctd>Path to the generated image file\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>HTMLPath\u003C/td>\u003Ctd>TEXT\u003C/td>\u003Ctd>Path to the generated HTML with meta tags\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>CreatedAt\u003C/td>\u003Ctd>TIMESTAMP\u003C/td>\u003Ctd>When the generation was created\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>ClientIP\u003C/td>\u003Ctd>TEXT\u003C/td>\u003Ctd>IP address of the client that requested the generation\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>UserAgent\u003C/td>\u003Ctd>TEXT\u003C/td>\u003Ctd>User agent of the client that requested the generation\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Parameters\u003C/td>\u003Ctd>TEXT\u003C/td>\u003Ctd>JSON string of additional parameters used\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Status\u003C/td>\u003Ctd>TEXT\u003C/td>\u003Ctd>Status of the generation (pending, completed, failed)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>cleanup_after\u003C/td>\u003Ctd>TIMESTAMP\u003C/td>\u003Ctd>When the generated files should be cleaned up\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"indexes\">Indexes\u003C/h2>\n\u003Cp>The database has the following indexes for performance:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>idx_generations_id\u003C/code>: Index on the \u003Ccode>ID\u003C/code> column for fast lookups\u003C/li>\n\u003Cli>\u003Ccode>idx_generations_created_at\u003C/code>: Index on the \u003Ccode>CreatedAt\u003C/code> column for sorting by time\u003C/li>\n\u003Cli>\u003Ccode>idx_generations_cleanup_after\u003C/code>: Index on the \u003Ccode>cleanup_after\u003C/code> column for the cleanup job\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"automatic-cleanup\">Automatic Cleanup\u003C/h2>\n\u003Cp>Generated files and database records are automatically cleaned up after a configurable period (default: 24 hours). The cleanup process:\u003C/p>\n\u003Col>\n\u003Cli>Finds all records where \u003Ccode>cleanup_after\u003C/code> is before the current time\u003C/li>\n\u003Cli>Deletes the associated image and HTML files\u003C/li>\n\u003Cli>Removes the database record\u003C/li>\n\u003C/ol>\n\u003Cp>This prevents unlimited storage growth and ensures temporary files are properly managed.\u003C/p>",{"headings":22,"localImagePaths":34,"remoteImagePaths":35,"frontmatter":11,"imagePaths":36},[23,25,28,31],{"depth":24,"slug":9,"text":12},1,{"depth":14,"slug":26,"text":27},"generations-table","Generations Table",{"depth":14,"slug":29,"text":30},"indexes","Indexes",{"depth":14,"slug":32,"text":33},"automatic-cleanup","Automatic Cleanup",[],[],[],"database-schema.md","admin-access",{"id":38,"data":40,"body":44,"filePath":45,"digest":46,"rendered":47,"legacyId":80},{"title":41,"description":42,"order":24,"updated":43},"Admin Access","Documentation for administrative features and access control",["Date","2023-05-20T00:00:00.000Z"],"# Admin Access\n\nDocumentation for administrative features and access control in the Open Graph Generator.\n\n## Configuration\n\nAdmin access is configured through environment variables:\n\n**In the backend:**\n\n- Set `ADMIN_TOKEN` in the `.env` file to a secure token value\n- Example: `ADMIN_TOKEN=a-secure-random-string`\n\n**In the frontend:**\n\n- Set `PUBLIC_ADMIN_AUTH_REQUIRED=true` in the `.env` file to enable admin authentication\n\nIf `ADMIN_TOKEN` is not set in the backend, admin authentication will be disabled and all users will have access to the history API.\n\n## Accessing Admin Features\n\nThe history page at `/history` is restricted to administrators only when admin authentication is enabled.\n\nWhen visiting the page, users will be presented with a login form requesting an admin token. This token must match the value of `ADMIN_TOKEN` set in the backend environment.\n\n### Admin Status Indicator\n\nWhen logged in as an admin, you'll see an \"Admin\" badge in the navigation bar, along with a logout button that allows you to end your admin session.\n\n## API Authentication\n\nBackend API endpoints for administrative features use Bearer token authentication. The token must be included in the `Authorization` header of the request:\n\n```\nAuthorization: Bearer your-admin-token\n```\n\n### Protected Endpoints\n\nThe following API endpoints require admin authentication:\n\n- `GET /api/history` - List of generation records\n- `GET /api/history/:id` - Details of a specific generation record\n\n### Verifying Admin Access\n\nTo verify that an admin token is valid, you can make a request to:\n\n```\nPOST /api/admin/verify\n```\n\nWith the header:\n\n```\nAuthorization: Bearer your-admin-token\n```\n\n## Security Considerations\n\n- Use a strong, random token for the `ADMIN_TOKEN` value\n- In production, always use HTTPS to protect the admin token during transmission\n- Consider implementing rate limiting for admin login attempts to prevent brute force attacks\n- Regularly rotate the admin token for enhanced security\n\n## Implementation Details\n\nThe admin authentication system is implemented through:\n\n1. A middleware in the backend that validates the admin token for protected endpoints\n2. A client-side validation in the frontend that stores the token in a cookie after verification\n3. All API requests from the admin interface include the token in the `Authorization` header","src/content/backend_docs/admin-access.md","60e25af70f30d4be",{"html":48,"metadata":49},"\u003Ch1 id=\"admin-access\">Admin Access\u003C/h1>\n\u003Cp>Documentation for administrative features and access control in the Open Graph Generator.\u003C/p>\n\u003Ch2 id=\"configuration\">Configuration\u003C/h2>\n\u003Cp>Admin access is configured through environment variables:\u003C/p>\n\u003Cp>\u003Cstrong>In the backend:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Set \u003Ccode>ADMIN_TOKEN\u003C/code> in the \u003Ccode>.env\u003C/code> file to a secure token value\u003C/li>\n\u003Cli>Example: \u003Ccode>ADMIN_TOKEN=a-secure-random-string\u003C/code>\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>In the frontend:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Set \u003Ccode>PUBLIC_ADMIN_AUTH_REQUIRED=true\u003C/code> in the \u003Ccode>.env\u003C/code> file to enable admin authentication\u003C/li>\n\u003C/ul>\n\u003Cp>If \u003Ccode>ADMIN_TOKEN\u003C/code> is not set in the backend, admin authentication will be disabled and all users will have access to the history API.\u003C/p>\n\u003Ch2 id=\"accessing-admin-features\">Accessing Admin Features\u003C/h2>\n\u003Cp>The history page at \u003Ccode>/history\u003C/code> is restricted to administrators only when admin authentication is enabled.\u003C/p>\n\u003Cp>When visiting the page, users will be presented with a login form requesting an admin token. This token must match the value of \u003Ccode>ADMIN_TOKEN\u003C/code> set in the backend environment.\u003C/p>\n\u003Ch3 id=\"admin-status-indicator\">Admin Status Indicator\u003C/h3>\n\u003Cp>When logged in as an admin, you’ll see an “Admin” badge in the navigation bar, along with a logout button that allows you to end your admin session.\u003C/p>\n\u003Ch2 id=\"api-authentication\">API Authentication\u003C/h2>\n\u003Cp>Backend API endpoints for administrative features use Bearer token authentication. The token must be included in the \u003Ccode>Authorization\u003C/code> header of the request:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>Authorization: Bearer your-admin-token\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"protected-endpoints\">Protected Endpoints\u003C/h3>\n\u003Cp>The following API endpoints require admin authentication:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>GET /api/history\u003C/code> - List of generation records\u003C/li>\n\u003Cli>\u003Ccode>GET /api/history/:id\u003C/code> - Details of a specific generation record\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"verifying-admin-access\">Verifying Admin Access\u003C/h3>\n\u003Cp>To verify that an admin token is valid, you can make a request to:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>POST /api/admin/verify\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>With the header:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>Authorization: Bearer your-admin-token\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"security-considerations\">Security Considerations\u003C/h2>\n\u003Cul>\n\u003Cli>Use a strong, random token for the \u003Ccode>ADMIN_TOKEN\u003C/code> value\u003C/li>\n\u003Cli>In production, always use HTTPS to protect the admin token during transmission\u003C/li>\n\u003Cli>Consider implementing rate limiting for admin login attempts to prevent brute force attacks\u003C/li>\n\u003Cli>Regularly rotate the admin token for enhanced security\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"implementation-details\">Implementation Details\u003C/h2>\n\u003Cp>The admin authentication system is implemented through:\u003C/p>\n\u003Col>\n\u003Cli>A middleware in the backend that validates the admin token for protected endpoints\u003C/li>\n\u003Cli>A client-side validation in the frontend that stores the token in a cookie after verification\u003C/li>\n\u003Cli>All API requests from the admin interface include the token in the \u003Ccode>Authorization\u003C/code> header\u003C/li>\n\u003C/ol>",{"headings":50,"localImagePaths":77,"remoteImagePaths":78,"frontmatter":40,"imagePaths":79},[51,52,55,58,62,65,68,71,74],{"depth":24,"slug":38,"text":41},{"depth":14,"slug":53,"text":54},"configuration","Configuration",{"depth":14,"slug":56,"text":57},"accessing-admin-features","Accessing Admin Features",{"depth":59,"slug":60,"text":61},3,"admin-status-indicator","Admin Status Indicator",{"depth":14,"slug":63,"text":64},"api-authentication","API Authentication",{"depth":59,"slug":66,"text":67},"protected-endpoints","Protected Endpoints",{"depth":59,"slug":69,"text":70},"verifying-admin-access","Verifying Admin Access",{"depth":14,"slug":72,"text":73},"security-considerations","Security Considerations",{"depth":14,"slug":75,"text":76},"implementation-details","Implementation Details",[],[],[],"admin-access.md","docker-setup",{"id":81,"data":83,"body":87,"filePath":88,"digest":89,"rendered":90,"legacyId":128},{"title":84,"description":85,"order":59,"updated":86},"Docker Setup","How to run the Open Graph Generator using Docker for development and production",["Date","2023-05-25T00:00:00.000Z"],"# Docker Setup\n\nThe Open Graph Generator provides Docker configurations for both development and production environments, making it easy to set up and deploy the application.\n\n## Development Environment\n\nThe development environment is configured using `docker-compose.yml` and includes hot-reloading for both frontend and backend services.\n\n### Starting the Development Environment\n\n```bash\ndocker compose up\n```\n\nThis will start:\n\n- Frontend service on port 3000\n- Backend service on port 8888\n\nThe development Docker setup includes volume mounts that allow you to modify code on your host machine and see the changes reflected immediately.\n\n### Environment Variables\n\nKey environment variables for the development environment:\n\n**Frontend:**\n\n- `BACKEND_URL=http://backend:8888` - Internal Docker network URL for backend\n- `NODE_ENV=development` - Sets Node.js to development mode\n- `SVELTE_FORCE_COMPILE=true` - Ensures Svelte components are recompiled\n- `ASTRO_TELEMETRY_DISABLED=1` - Disables Astro telemetry\n\n**Backend:**\n\n- `PORT=8888` - Port for the backend server\n- `BASE_URL=http://backend:8888` - Base URL for generated asset links\n- `ENABLE_CORS=true` - Enables Cross-Origin Resource Sharing\n- `OUTPUT_DIR=/app/outputs` - Directory for generated assets\n\n## Production Environment\n\nThe production environment is configured using `docker-compose.production.yml` and includes optimized builds for better performance.\n\n### Starting the Production Environment\n\n```bash\ndocker compose -f docker-compose.production.yml up -d\n```\n\nThis will start:\n\n- Optimized frontend service on port 3000\n- Optimized backend service on port 8080 (note the different port from development)\n\n### Production Features\n\n- **Optimized Builds**: Both services use multi-stage builds to create smaller, more efficient containers\n- **Health Checks**: Both services include health checks for monitoring container health\n- **Persistent Storage**: Production setup includes a named volume for persistent storage\n- **Resource Constraints**: You can set resource limits for containers\n\n## Accessing the Services\n\n- Frontend: `http://localhost:3000`\n- Backend API:\n  - Development: `http://localhost:8888`\n  - Production: `http://localhost:8080`\n\n## Docker Volumes\n\nThe Docker setup includes several volumes:\n\n- `frontend_node_modules`: For caching Node.js modules\n- `frontend_pnpm_store`: For caching pnpm packages\n- `outputs`: Shared volume for generated images and HTML files\n- `backend_data`: (Production only) Persistent storage for backend data\n\n## Debugging Docker Setup\n\nIf you encounter issues with the Docker setup:\n\n1. Check container logs:\n\n   ```bash\n   docker compose logs frontend\n   docker compose logs backend\n   ```\n\n2. Verify network connectivity between containers:\n\n   ```bash\n   docker compose exec frontend ping backend\n   ```\n\n3. Check running containers:\n   ```bash\n   docker compose ps\n   ```\n\n## Customizing Docker Setup\n\nYou can create a `.env` file in the root directory to override any environment variables defined in the Docker Compose files.\n\nExample `.env` file:\n\n```\nPORT=9999\nBACKEND_URL=http://backend:9999\n```","src/content/backend_docs/docker-setup.md","552b512b342d420f",{"html":91,"metadata":92},"\u003Ch1 id=\"docker-setup\">Docker Setup\u003C/h1>\n\u003Cp>The Open Graph Generator provides Docker configurations for both development and production environments, making it easy to set up and deploy the application.\u003C/p>\n\u003Ch2 id=\"development-environment\">Development Environment\u003C/h2>\n\u003Cp>The development environment is configured using \u003Ccode>docker-compose.yml\u003C/code> and includes hot-reloading for both frontend and backend services.\u003C/p>\n\u003Ch3 id=\"starting-the-development-environment\">Starting the Development Environment\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> compose\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> up\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>This will start:\u003C/p>\n\u003Cul>\n\u003Cli>Frontend service on port 3000\u003C/li>\n\u003Cli>Backend service on port 8888\u003C/li>\n\u003C/ul>\n\u003Cp>The development Docker setup includes volume mounts that allow you to modify code on your host machine and see the changes reflected immediately.\u003C/p>\n\u003Ch3 id=\"environment-variables\">Environment Variables\u003C/h3>\n\u003Cp>Key environment variables for the development environment:\u003C/p>\n\u003Cp>\u003Cstrong>Frontend:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>BACKEND_URL=http://backend:8888\u003C/code> - Internal Docker network URL for backend\u003C/li>\n\u003Cli>\u003Ccode>NODE_ENV=development\u003C/code> - Sets Node.js to development mode\u003C/li>\n\u003Cli>\u003Ccode>SVELTE_FORCE_COMPILE=true\u003C/code> - Ensures Svelte components are recompiled\u003C/li>\n\u003Cli>\u003Ccode>ASTRO_TELEMETRY_DISABLED=1\u003C/code> - Disables Astro telemetry\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Backend:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>PORT=8888\u003C/code> - Port for the backend server\u003C/li>\n\u003Cli>\u003Ccode>BASE_URL=http://backend:8888\u003C/code> - Base URL for generated asset links\u003C/li>\n\u003Cli>\u003Ccode>ENABLE_CORS=true\u003C/code> - Enables Cross-Origin Resource Sharing\u003C/li>\n\u003Cli>\u003Ccode>OUTPUT_DIR=/app/outputs\u003C/code> - Directory for generated assets\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"production-environment\">Production Environment\u003C/h2>\n\u003Cp>The production environment is configured using \u003Ccode>docker-compose.production.yml\u003C/code> and includes optimized builds for better performance.\u003C/p>\n\u003Ch3 id=\"starting-the-production-environment\">Starting the Production Environment\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> compose\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -f\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> docker-compose.production.yml\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> up\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -d\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>This will start:\u003C/p>\n\u003Cul>\n\u003Cli>Optimized frontend service on port 3000\u003C/li>\n\u003Cli>Optimized backend service on port 8080 (note the different port from development)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"production-features\">Production Features\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Optimized Builds\u003C/strong>: Both services use multi-stage builds to create smaller, more efficient containers\u003C/li>\n\u003Cli>\u003Cstrong>Health Checks\u003C/strong>: Both services include health checks for monitoring container health\u003C/li>\n\u003Cli>\u003Cstrong>Persistent Storage\u003C/strong>: Production setup includes a named volume for persistent storage\u003C/li>\n\u003Cli>\u003Cstrong>Resource Constraints\u003C/strong>: You can set resource limits for containers\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"accessing-the-services\">Accessing the Services\u003C/h2>\n\u003Cul>\n\u003Cli>Frontend: \u003Ccode>http://localhost:3000\u003C/code>\u003C/li>\n\u003Cli>Backend API:\n\u003Cul>\n\u003Cli>Development: \u003Ccode>http://localhost:8888\u003C/code>\u003C/li>\n\u003Cli>Production: \u003Ccode>http://localhost:8080\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"docker-volumes\">Docker Volumes\u003C/h2>\n\u003Cp>The Docker setup includes several volumes:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>frontend_node_modules\u003C/code>: For caching Node.js modules\u003C/li>\n\u003Cli>\u003Ccode>frontend_pnpm_store\u003C/code>: For caching pnpm packages\u003C/li>\n\u003Cli>\u003Ccode>outputs\u003C/code>: Shared volume for generated images and HTML files\u003C/li>\n\u003Cli>\u003Ccode>backend_data\u003C/code>: (Production only) Persistent storage for backend data\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"debugging-docker-setup\">Debugging Docker Setup\u003C/h2>\n\u003Cp>If you encounter issues with the Docker setup:\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>Check container logs:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> compose\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> logs\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> frontend\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> compose\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> logs\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> backend\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>Verify network connectivity between containers:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> compose\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> exec\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> frontend\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ping\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> backend\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>Check running containers:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> compose\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ps\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"customizing-docker-setup\">Customizing Docker Setup\u003C/h2>\n\u003Cp>You can create a \u003Ccode>.env\u003C/code> file in the root directory to override any environment variables defined in the Docker Compose files.\u003C/p>\n\u003Cp>Example \u003Ccode>.env\u003C/code> file:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>PORT=9999\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>BACKEND_URL=http://backend:9999\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",{"headings":93,"localImagePaths":125,"remoteImagePaths":126,"frontmatter":83,"imagePaths":127},[94,95,98,101,104,107,110,113,116,119,122],{"depth":24,"slug":81,"text":84},{"depth":14,"slug":96,"text":97},"development-environment","Development Environment",{"depth":59,"slug":99,"text":100},"starting-the-development-environment","Starting the Development Environment",{"depth":59,"slug":102,"text":103},"environment-variables","Environment Variables",{"depth":14,"slug":105,"text":106},"production-environment","Production Environment",{"depth":59,"slug":108,"text":109},"starting-the-production-environment","Starting the Production Environment",{"depth":59,"slug":111,"text":112},"production-features","Production Features",{"depth":14,"slug":114,"text":115},"accessing-the-services","Accessing the Services",{"depth":14,"slug":117,"text":118},"docker-volumes","Docker Volumes",{"depth":14,"slug":120,"text":121},"debugging-docker-setup","Debugging Docker Setup",{"depth":14,"slug":123,"text":124},"customizing-docker-setup","Customizing Docker Setup",[],[],[],"docker-setup.md","deployment",{"id":129,"data":131,"body":136,"filePath":137,"digest":138,"rendered":139,"legacyId":182},{"title":132,"description":133,"order":134,"updated":135},"Deployment Guide","How to deploy the Open Graph Generator to production",4,["Date","2023-05-30T00:00:00.000Z"],"# Deployment Guide\n\nThis guide explains how to deploy the Open Graph Generator to production environments.\n\n## Deployment Options\n\nThe Open Graph Generator supports several deployment options:\n\n1. **Docker-based deployment**: Using Docker Compose for containerized deployment\n2. **Manual deployment**: Building and running the services directly on a server\n3. **Cloud deployment**: Using cloud services like AWS, GCP, or Azure\n\n## Docker-based Deployment\n\nThe simplest deployment method is using Docker Compose with the production configuration.\n\n### Prerequisites\n\n- Docker and Docker Compose installed on the server\n- Git for cloning the repository\n- A domain name (optional, but recommended)\n- SSL certificate for HTTPS (optional, but recommended)\n\n### Deployment Steps\n\n1. Clone the repository on your server:\n\n   ```bash\n   git clone https://github.com/yourusername/ogdrip.git\n   cd ogdrip\n   ```\n\n2. Create a `.env` file for production:\n\n   ```bash\n   cp frontend/.env.example frontend/.env\n   ```\n\n3. Edit the `.env` file with your production settings:\n\n   ```\n   BACKEND_URL=https://your-domain.com\n   PUBLIC_BACKEND_URL=https://your-domain.com\n   PUBLIC_ADMIN_AUTH_REQUIRED=true\n   ```\n\n4. Set the backend environment variables by creating a `.env` file in the root directory:\n\n   ```\n   ADMIN_TOKEN=your-secure-admin-token\n   BASE_URL=https://your-domain.com\n   ```\n\n5. Deploy the application using Docker Compose:\n\n   ```bash\n   docker compose -f docker-compose.production.yml up -d\n   ```\n\n6. Configure a reverse proxy (like Nginx or Traefik) to handle HTTPS and route traffic to the appropriate container.\n\n## Manual Deployment\n\nFor servers without Docker, you can deploy the services manually.\n\n### Backend Deployment\n\n1. Install Go on your server (version 1.19 or higher)\n2. Clone the repository\n3. Navigate to the backend directory:\n   ```bash\n   cd backend\n   ```\n4. Build the backend:\n   ```bash\n   go build -o ogdrip-backend .\n   ```\n5. Run the backend:\n   ```bash\n   ./ogdrip-backend\n   ```\n\n### Frontend Deployment\n\n1. Install Node.js (version 18 or higher) and pnpm\n2. Navigate to the frontend directory:\n   ```bash\n   cd frontend\n   ```\n3. Install dependencies:\n   ```bash\n   pnpm install\n   ```\n4. Build the frontend:\n   ```bash\n   pnpm run build\n   ```\n5. Run the production server:\n   ```bash\n   node dist/server/entry.mjs\n   ```\n\n## Environment Variables\n\n### Critical Environment Variables\n\n| Variable                     | Service  | Description                              |\n| ---------------------------- | -------- | ---------------------------------------- |\n| `BACKEND_URL`                | Frontend | URL to the backend API (internal)        |\n| `PUBLIC_BACKEND_URL`         | Frontend | URL to the backend API (public-facing)   |\n| `PUBLIC_ADMIN_AUTH_REQUIRED` | Frontend | Whether admin authentication is required |\n| `ADMIN_TOKEN`                | Backend  | Token for admin authentication           |\n| `BASE_URL`                   | Backend  | Base URL for generated asset links       |\n\n### Optional Environment Variables\n\n| Variable           | Service  | Description                                                         |\n| ------------------ | -------- | ------------------------------------------------------------------- |\n| `PORT`             | Both     | Port for the service (default: 3000 for frontend, 8080 for backend) |\n| `NODE_ENV`         | Frontend | Node.js environment                                                 |\n| `SENTRY_DSN`       | Both     | Sentry DSN for error tracking                                       |\n| `CLEANUP_INTERVAL` | Backend  | Interval for cleaning up old files (default: 24h)                   |\n\n## Health Monitoring\n\nThe application provides health check endpoints:\n\n- Frontend: `/health`\n- Backend: `/api/health`\n\nYou can use these with monitoring tools to check the health of your deployment.\n\n## Backup and Maintenance\n\n1. **Database Backups**: The SQLite database is stored at `/app/outputs/og-generator.db`. Back up this file regularly.\n\n2. **Generated Files**: All generated files are stored in the `/app/outputs` directory. Ensure you have enough disk space.\n\n3. **Updates**: To update the application:\n   ```bash\n   git pull\n   docker compose -f docker-compose.production.yml up -d --build\n   ```","src/content/backend_docs/deployment.md","43f631ba990f7717",{"html":140,"metadata":141},"\u003Ch1 id=\"deployment-guide\">Deployment Guide\u003C/h1>\n\u003Cp>This guide explains how to deploy the Open Graph Generator to production environments.\u003C/p>\n\u003Ch2 id=\"deployment-options\">Deployment Options\u003C/h2>\n\u003Cp>The Open Graph Generator supports several deployment options:\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>Docker-based deployment\u003C/strong>: Using Docker Compose for containerized deployment\u003C/li>\n\u003Cli>\u003Cstrong>Manual deployment\u003C/strong>: Building and running the services directly on a server\u003C/li>\n\u003Cli>\u003Cstrong>Cloud deployment\u003C/strong>: Using cloud services like AWS, GCP, or Azure\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"docker-based-deployment\">Docker-based Deployment\u003C/h2>\n\u003Cp>The simplest deployment method is using Docker Compose with the production configuration.\u003C/p>\n\u003Ch3 id=\"prerequisites\">Prerequisites\u003C/h3>\n\u003Cul>\n\u003Cli>Docker and Docker Compose installed on the server\u003C/li>\n\u003Cli>Git for cloning the repository\u003C/li>\n\u003Cli>A domain name (optional, but recommended)\u003C/li>\n\u003Cli>SSL certificate for HTTPS (optional, but recommended)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"deployment-steps\">Deployment Steps\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>Clone the repository on your server:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">git\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> clone\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> https://github.com/yourusername/ogdrip.git\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">cd\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ogdrip\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>Create a \u003Ccode>.env\u003C/code> file for production:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">cp\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> frontend/.env.example\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> frontend/.env\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>Edit the \u003Ccode>.env\u003C/code> file with your production settings:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>BACKEND_URL=https://your-domain.com\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>PUBLIC_BACKEND_URL=https://your-domain.com\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>PUBLIC_ADMIN_AUTH_REQUIRED=true\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>Set the backend environment variables by creating a \u003Ccode>.env\u003C/code> file in the root directory:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>ADMIN_TOKEN=your-secure-admin-token\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>BASE_URL=https://your-domain.com\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>Deploy the application using Docker Compose:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> compose\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -f\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> docker-compose.production.yml\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> up\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -d\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>Configure a reverse proxy (like Nginx or Traefik) to handle HTTPS and route traffic to the appropriate container.\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"manual-deployment\">Manual Deployment\u003C/h2>\n\u003Cp>For servers without Docker, you can deploy the services manually.\u003C/p>\n\u003Ch3 id=\"backend-deployment\">Backend Deployment\u003C/h3>\n\u003Col>\n\u003Cli>Install Go on your server (version 1.19 or higher)\u003C/li>\n\u003Cli>Clone the repository\u003C/li>\n\u003Cli>Navigate to the backend directory:\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">cd\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> backend\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>Build the backend:\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">go\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> build\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -o\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ogdrip-backend\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> .\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>Run the backend:\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">./ogdrip-backend\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"frontend-deployment\">Frontend Deployment\u003C/h3>\n\u003Col>\n\u003Cli>Install Node.js (version 18 or higher) and pnpm\u003C/li>\n\u003Cli>Navigate to the frontend directory:\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">cd\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> frontend\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>Install dependencies:\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">pnpm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>Build the frontend:\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">pnpm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> build\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>Run the production server:\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">node\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> dist/server/entry.mjs\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"environment-variables\">Environment Variables\u003C/h2>\n\u003Ch3 id=\"critical-environment-variables\">Critical Environment Variables\u003C/h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Variable\u003C/th>\u003Cth>Service\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>\u003Ccode>BACKEND_URL\u003C/code>\u003C/td>\u003Ctd>Frontend\u003C/td>\u003Ctd>URL to the backend API (internal)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003Ccode>PUBLIC_BACKEND_URL\u003C/code>\u003C/td>\u003Ctd>Frontend\u003C/td>\u003Ctd>URL to the backend API (public-facing)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003Ccode>PUBLIC_ADMIN_AUTH_REQUIRED\u003C/code>\u003C/td>\u003Ctd>Frontend\u003C/td>\u003Ctd>Whether admin authentication is required\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003Ccode>ADMIN_TOKEN\u003C/code>\u003C/td>\u003Ctd>Backend\u003C/td>\u003Ctd>Token for admin authentication\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003Ccode>BASE_URL\u003C/code>\u003C/td>\u003Ctd>Backend\u003C/td>\u003Ctd>Base URL for generated asset links\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch3 id=\"optional-environment-variables\">Optional Environment Variables\u003C/h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Variable\u003C/th>\u003Cth>Service\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>\u003Ccode>PORT\u003C/code>\u003C/td>\u003Ctd>Both\u003C/td>\u003Ctd>Port for the service (default: 3000 for frontend, 8080 for backend)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003Ccode>NODE_ENV\u003C/code>\u003C/td>\u003Ctd>Frontend\u003C/td>\u003Ctd>Node.js environment\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003Ccode>SENTRY_DSN\u003C/code>\u003C/td>\u003Ctd>Both\u003C/td>\u003Ctd>Sentry DSN for error tracking\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>\u003Ccode>CLEANUP_INTERVAL\u003C/code>\u003C/td>\u003Ctd>Backend\u003C/td>\u003Ctd>Interval for cleaning up old files (default: 24h)\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"health-monitoring\">Health Monitoring\u003C/h2>\n\u003Cp>The application provides health check endpoints:\u003C/p>\n\u003Cul>\n\u003Cli>Frontend: \u003Ccode>/health\u003C/code>\u003C/li>\n\u003Cli>Backend: \u003Ccode>/api/health\u003C/code>\u003C/li>\n\u003C/ul>\n\u003Cp>You can use these with monitoring tools to check the health of your deployment.\u003C/p>\n\u003Ch2 id=\"backup-and-maintenance\">Backup and Maintenance\u003C/h2>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>Database Backups\u003C/strong>: The SQLite database is stored at \u003Ccode>/app/outputs/og-generator.db\u003C/code>. Back up this file regularly.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Generated Files\u003C/strong>: All generated files are stored in the \u003Ccode>/app/outputs\u003C/code> directory. Ensure you have enough disk space.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Updates\u003C/strong>: To update the application:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">git\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> pull\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">docker\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> compose\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -f\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> docker-compose.production.yml\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> up\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -d\u003C/span>\u003Cspan style=\"color:#79B8FF\"> --build\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>",{"headings":142,"localImagePaths":179,"remoteImagePaths":180,"frontmatter":131,"imagePaths":181},[143,145,148,151,154,157,160,163,166,167,170,173,176],{"depth":24,"slug":144,"text":132},"deployment-guide",{"depth":14,"slug":146,"text":147},"deployment-options","Deployment Options",{"depth":14,"slug":149,"text":150},"docker-based-deployment","Docker-based Deployment",{"depth":59,"slug":152,"text":153},"prerequisites","Prerequisites",{"depth":59,"slug":155,"text":156},"deployment-steps","Deployment Steps",{"depth":14,"slug":158,"text":159},"manual-deployment","Manual Deployment",{"depth":59,"slug":161,"text":162},"backend-deployment","Backend Deployment",{"depth":59,"slug":164,"text":165},"frontend-deployment","Frontend Deployment",{"depth":14,"slug":102,"text":103},{"depth":59,"slug":168,"text":169},"critical-environment-variables","Critical Environment Variables",{"depth":59,"slug":171,"text":172},"optional-environment-variables","Optional Environment Variables",{"depth":14,"slug":174,"text":175},"health-monitoring","Health Monitoring",{"depth":14,"slug":177,"text":178},"backup-and-maintenance","Backup and Maintenance",[],[],[],"deployment.md","frontend_docs",["Map",185,186,215,216],"api-reference",{"id":185,"data":187,"body":191,"filePath":192,"digest":193,"rendered":194,"legacyId":214},{"title":188,"description":189,"order":14,"updated":190},"API Reference","Reference documentation for the Open Graph Generator API",["Date","2023-05-15T00:00:00.000Z"],"# API Reference\n\nThe Open Graph Generator provides a REST API for programmatic access. Here are the available endpoints:\n\n## Generate Open Graph Assets\n\n```\nPOST /api/generate\nContent-Type: application/json\n\n{\n  \"title\": \"Your Page Title\",\n  \"description\": \"Your page description\",\n  \"target_url\": \"https://example.com\",\n  \"og_type\": \"website\",\n  \"site_name\": \"Your Site Name\",\n  \"image_width\": 1200,\n  \"image_height\": 630\n}\n```\n\n### Response\n\nA successful response will include URLs to the generated assets:\n\n```json\n{\n  \"success\": true,\n  \"message\": \"Open Graph assets generated successfully\",\n  \"image_url\": \"https://example.com/og-images/1234-5678.png\",\n  \"html_url\": \"https://example.com/og-meta/1234-5678.html\",\n  \"zip_url\": \"https://example.com/og-downloads/1234-5678.zip\"\n}\n```\n\n## Download Generated Assets\n\n```\nGET /api/download/:generationId\n```\n\nThis endpoint returns a ZIP file containing the image, HTML file with meta tags, and a preview of how it looks on social media.\n\n## Health Check\n\n```\nGET /api/health\n```\n\nReturns the status of the API:\n\n```json\n{\n  \"status\": \"ok\",\n  \"message\": \"Open Graph Generator API is running\"\n}\n```","src/content/frontend_docs/api-reference.md","0f08d1f6f674ab26",{"html":195,"metadata":196},"\u003Ch1 id=\"api-reference\">API Reference\u003C/h1>\n\u003Cp>The Open Graph Generator provides a REST API for programmatic access. Here are the available endpoints:\u003C/p>\n\u003Ch2 id=\"generate-open-graph-assets\">Generate Open Graph Assets\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>POST /api/generate\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>Content-Type: application/json\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \"title\": \"Your Page Title\",\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \"description\": \"Your page description\",\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \"target_url\": \"https://example.com\",\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \"og_type\": \"website\",\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \"site_name\": \"Your Site Name\",\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \"image_width\": 1200,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \"image_height\": 630\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"response\">Response\u003C/h3>\n\u003Cp>A successful response will include URLs to the generated assets:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"success\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"message\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Open Graph assets generated successfully\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"image_url\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"https://example.com/og-images/1234-5678.png\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"html_url\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"https://example.com/og-meta/1234-5678.html\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"zip_url\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"https://example.com/og-downloads/1234-5678.zip\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"download-generated-assets\">Download Generated Assets\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>GET /api/download/:generationId\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>This endpoint returns a ZIP file containing the image, HTML file with meta tags, and a preview of how it looks on social media.\u003C/p>\n\u003Ch2 id=\"health-check\">Health Check\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>GET /api/health\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Returns the status of the API:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"status\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"ok\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"message\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Open Graph Generator API is running\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",{"headings":197,"localImagePaths":211,"remoteImagePaths":212,"frontmatter":187,"imagePaths":213},[198,199,202,205,208],{"depth":24,"slug":185,"text":188},{"depth":14,"slug":200,"text":201},"generate-open-graph-assets","Generate Open Graph Assets",{"depth":59,"slug":203,"text":204},"response","Response",{"depth":14,"slug":206,"text":207},"download-generated-assets","Download Generated Assets",{"depth":14,"slug":209,"text":210},"health-check","Health Check",[],[],[],"api-reference.md","getting-started",{"id":215,"data":217,"body":221,"filePath":222,"digest":223,"rendered":224,"legacyId":241},{"title":218,"description":219,"order":24,"updated":220},"Getting Started","Learn how to use the Open Graph Generator for your website",["Date","2023-05-15T00:00:00.000Z"],"# Getting Started\n\nThe Open Graph Generator helps you create beautiful images and meta tags for social media sharing. Follow these steps to get started:\n\n1. Enter your page title and description\n2. Provide the URL you want to promote\n3. Customize the appearance (optional)\n4. Generate your Open Graph assets\n5. Download and implement them on your website\n\n## Generating Open Graph Images\n\nOpen Graph images are shown when your content is shared on social media platforms like Facebook, Twitter, and LinkedIn. Here's how to create effective images:\n\n### Best Practices:\n\n- Use a clear, concise title that accurately describes your content\n- Keep descriptions informative but brief (under 200 characters)\n- Use high-quality images when possible\n- Follow the recommended dimensions for each platform\n\n## Using Meta Tags\n\nMeta tags tell social platforms how to display your content. After generating your Open Graph assets, you'll need to add these tags to the `\u003Chead>` section of your HTML:\n\n```html\n\u003Cmeta property=\"og:title\" content=\"Your Title\" />\n\u003Cmeta property=\"og:description\" content=\"Your Description\" />\n\u003Cmeta property=\"og:image\" content=\"https://example.com/your-image.jpg\" />\n\u003Cmeta property=\"og:url\" content=\"https://example.com/your-page\" />\n\u003Cmeta property=\"og:type\" content=\"website\" />\n```\n\nFor Twitter, you might also want to include Twitter Card tags:\n\n```html\n\u003Cmeta name=\"twitter:card\" content=\"summary_large_image\" />\n\u003Cmeta name=\"twitter:title\" content=\"Your Title\" />\n\u003Cmeta name=\"twitter:description\" content=\"Your Description\" />\n\u003Cmeta name=\"twitter:image\" content=\"https://example.com/your-image.jpg\" />\n```","src/content/frontend_docs/getting-started.md","746d798ef9bdb6a7",{"html":225,"metadata":226},"\u003Ch1 id=\"getting-started\">Getting Started\u003C/h1>\n\u003Cp>The Open Graph Generator helps you create beautiful images and meta tags for social media sharing. Follow these steps to get started:\u003C/p>\n\u003Col>\n\u003Cli>Enter your page title and description\u003C/li>\n\u003Cli>Provide the URL you want to promote\u003C/li>\n\u003Cli>Customize the appearance (optional)\u003C/li>\n\u003Cli>Generate your Open Graph assets\u003C/li>\n\u003Cli>Download and implement them on your website\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"generating-open-graph-images\">Generating Open Graph Images\u003C/h2>\n\u003Cp>Open Graph images are shown when your content is shared on social media platforms like Facebook, Twitter, and LinkedIn. Here’s how to create effective images:\u003C/p>\n\u003Ch3 id=\"best-practices\">Best Practices:\u003C/h3>\n\u003Cul>\n\u003Cli>Use a clear, concise title that accurately describes your content\u003C/li>\n\u003Cli>Keep descriptions informative but brief (under 200 characters)\u003C/li>\n\u003Cli>Use high-quality images when possible\u003C/li>\n\u003Cli>Follow the recommended dimensions for each platform\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"using-meta-tags\">Using Meta Tags\u003C/h2>\n\u003Cp>Meta tags tell social platforms how to display your content. After generating your Open Graph assets, you’ll need to add these tags to the \u003Ccode>&#x3C;head>\u003C/code> section of your HTML:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">meta\u003C/span>\u003Cspan style=\"color:#B392F0\"> property\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"og:title\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Your Title\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">meta\u003C/span>\u003Cspan style=\"color:#B392F0\"> property\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"og:description\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Your Description\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">meta\u003C/span>\u003Cspan style=\"color:#B392F0\"> property\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"og:image\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"https://example.com/your-image.jpg\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">meta\u003C/span>\u003Cspan style=\"color:#B392F0\"> property\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"og:url\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"https://example.com/your-page\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">meta\u003C/span>\u003Cspan style=\"color:#B392F0\"> property\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"og:type\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"website\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>For Twitter, you might also want to include Twitter Card tags:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">meta\u003C/span>\u003Cspan style=\"color:#B392F0\"> name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"twitter:card\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"summary_large_image\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">meta\u003C/span>\u003Cspan style=\"color:#B392F0\"> name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"twitter:title\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Your Title\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">meta\u003C/span>\u003Cspan style=\"color:#B392F0\"> name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"twitter:description\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Your Description\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">meta\u003C/span>\u003Cspan style=\"color:#B392F0\"> name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"twitter:image\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"https://example.com/your-image.jpg\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",{"headings":227,"localImagePaths":238,"remoteImagePaths":239,"frontmatter":217,"imagePaths":240},[228,229,232,235],{"depth":24,"slug":215,"text":218},{"depth":14,"slug":230,"text":231},"generating-open-graph-images","Generating Open Graph Images",{"depth":59,"slug":233,"text":234},"best-practices","Best Practices:",{"depth":14,"slug":236,"text":237},"using-meta-tags","Using Meta Tags",[],[],[],"getting-started.md"]